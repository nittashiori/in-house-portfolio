---
import Navigation from './Navigation.astro';
import SwitchTheme from './Switch/SwitchTheme.astro';
import Hamburger from './Hamburger.astro';
---
<header class="c-header">
  <Hamburger />
  <Navigation />
  <SwitchTheme />
</header>

<script type="module">
  const navigation = document.querySelector('.c-navigation');
  const hamburger = document.querySelector('.c-hamburger');
  const focusableContent = navigation.querySelectorAll('a, button, input, textarea, select, [tabindex]:not([tabindex="-1"])');
  const focusableElements = [hamburger, ...focusableContent];
  const firstFocusableElement = focusableElements[0];
  const lastFocusableElement = focusableContent[focusableContent.length - 1];

  hamburger.addEventListener('click', () => {
    toggleHamburger();
  });

  hamburger.addEventListener('keydown', (event) => {
    if (event.key === 'Enter' || event.key === ' ') {
      toggleHamburger();
      event.preventDefault();
    }
  });

  const anchers = document.querySelectorAll('.c-navigation a');
  anchers.forEach((ancher) => {
    ancher.addEventListener('click', () => {
      toggleHamburger();
    })
  })

  function toggleHamburger () {
    if (hamburger.classList.contains('is-expanded')) {
      navigation.classList.remove('is-expanded');
      hamburger.classList.remove('is-expanded');
      hamburger.setAttribute('aria-pressed', false);
      document.removeEventListener('keydown', trapFocus);
    } else {
      navigation.classList.add('is-expanded');
      hamburger.classList.add('is-expanded');
      hamburger.setAttribute('aria-pressed', true);
      hamburger.focus();
      document.addEventListener('keydown', trapFocus);
    }
  }

  function trapFocus(event) {
    const isTabPressed = event.key === 'Tab' || event.keyCode === 9;

    if (!isTabPressed) {
      return;
    }

    if (event.shiftKey) {
      // shift + tab
      if (document.activeElement === firstFocusableElement) {
        lastFocusableElement.focus();
        event.preventDefault();
      }
    } else {
      // tab
      if (document.activeElement === lastFocusableElement) {
        firstFocusableElement.focus();
        event.preventDefault();
      }
    }
  }
</script>

<style>
  .c-header {
    width: 100%;
    height: 6.4rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-direction: row-reverse;
    padding: var(--space-xs-2) var(--space-s);
    z-index: 1000;
    position: fixed;
    top: 0;
    left: 0;
    transition: transform .6s;

    @media (min-width: 768px) {
      height: auto;
      flex-direction: row;
    }

    .c-navigation {
      .lists {
        opacity: 0;
        scale: 0;
        transition: scale 0.3s ease-out 0.3s, opacity 0.3s ease-out;
      }
    }

    .c-navigation.is-expanded {
      display: block;

      .lists {
        opacity: 1;
        scale: 1;
      }
    }

    .c-switch-theme {
      position: relative;
      z-index: -1;
    }

    @media (min-width: 768px) {
      .c-navigation {
        display: block;
        width: auto;
        min-width: auto;
        height: auto;
        position: relative;

        .lists {
          opacity: 1;
          scale: 1;
        }
      }
    }
  }
</style>