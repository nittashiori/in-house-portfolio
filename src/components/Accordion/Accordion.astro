---
interface Props {
  className?: string;
  as?: string;
}

const {
  /** Class */
  className = '',
  /** タグ */
  as: Tag = 'div',
} = Astro.props;
---
<Tag class={`c-accordion ${className || ''}`}>
  <slot />
</Tag>

<style>
  .c-accordion {
    display: flex;
    flex-direction: column;
  }
</style>

<script type="module" defer>
  document.addEventListener('DOMContentLoaded', () => {
    const elements = document.querySelectorAll('.c-accordion-item');

    elements.forEach(element => {
      const button = element.querySelector('.c-accordion-button');
      const panel = element.querySelector('.c-accordion-panel');

      if(element.classList.contains('is-open')) {
        button.classList.add('is-active');
        button.setAttribute('aria-expanded', 'true');
        panel.style.height = panel.scrollHeight + 'px';
      } else {
        button.setAttribute('aria-expanded', 'false');
        panel.setAttribute('aria-hidden', 'true');
      }

      button.addEventListener('click', function() {
        const expanded = this.getAttribute('aria-expanded') === 'true';

        this.classList.toggle('is-active');
        this.setAttribute('aria-expanded', !expanded);
        panel.setAttribute('aria-hidden', expanded);
        
        if(element.classList.contains('is-open')) {
          element.classList.remove('is-open');
        }

        if (!expanded) {
          panel.style.height = panel.scrollHeight + 'px';
        } else {
          panel.style.height = panel.scrollHeight + 'px';
          requestAnimationFrame(() => {
            requestAnimationFrame(() => {
              panel.style.height = '0';
            });
          });
        }

        panel.addEventListener('transitionend', () => {
          if (!expanded) {
            panel.style.height = 'auto';
          }
        }, { once: true });
      });
    });
  });
</script>