---
interface Props {
  id: string;
  name: string;
  value?: string;
  checked?: boolean;
  dataOnchange?: string;
  error?: boolean;
  disabled?: boolean;
}

const {
  id,
  name,
  value = '',
  checked = false,
  dataOnchange = '',
  error = false,
  disabled = false,
} = Astro.props;
---
<div class=`c-radio ${ disabled ? 'disabled' : '' } ${ error ? 'error' : '' }`>
  <input
    type="radio"
    id={id}
    name={name}
    value={value}
    checked={checked}
    data-onchange={dataOnchange}
    disabled={disabled}
  >
  <label for={id}><slot /></label>
</div>

<style>
  .c-radio {
    width: 100%;
    display: inline-flex;
    &:focus-within {
      outline: none;
      box-shadow: var(--shadow-focus);
    }

    > input {
      border-radius: 0;
      -webkit-appearance: none;
        -moz-appearance: none;
              appearance: none;
    }

    > input:checked {
      + label::before {
        background: var(--color-background-primary-emphasis);
        border: 2px solid var(--color-border-primary);
      }

      + label::after {
        content: '';
        position: absolute;
        width: 0.5em;
        height: 0.5em;
        left: calc(var(--space-1-5) + 0.38em);
        top: calc(var(--space-1-5) + 0.38em);
        background: var(--color-foreground-on-fill);
        border-radius: 50%;
      }
    }

    > label {
      width: 100%;
      position: relative;
      padding-inline: calc(1.25em + var(--space-3)) var(--space-1-5);
      padding-block: var(--space-1-5);
      cursor: pointer;
      display: inline-block;
      line-height: 20px;
      border-radius: var(--round-s);

      &::before {
        content: '';
        position: absolute;
        left: var(--space-1-5);
        top: var(--space-1-5);
        width: 1.25em;
        height: 1.25em;
        border: 2px solid var(--color-border-default);
        border-radius: 50%;
        background: var(--color-background-on-fill);
      }
    }

    &.error {
      > input:checked {
        + label {
          color: var(--color-foreground-body);
        }
      }

      > label {
        color: var(--color-foreground-alert);
      }

      > label::before {
        border: 2px solid var(--color-border-alert);
      }

      > label::after {
        background: var(--color-background-alert);
      }
    }

    &.disabled {
      > label {
        color: var(--color-foreground-disabled);
        cursor: not-allowed;
      }

      > label::before {
        border: 2px solid var(--color-border-disabled);
      }

      > label::after {
        background: var(--color-background-disabled);
      }
    }
  }
</style>