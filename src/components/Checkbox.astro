---
interface Props {
  id: string;
  name: string;
  value?: string;
  checked?: boolean;
  onChange?: (event: Event) => void;
  error?: boolean;
  disabled?: boolean;
}

const {
  id,
  name,
  value = '',
  checked = false,
  onChange = () => {},
  error = false,
  disabled = false,
} = Astro.props;
---
<div
  class=`c-check ${ disabled ? 'disabled' : '' } ${ error ? 'error' : '' }`>
  <input
    type="checkbox"
    id={id}
    name={name}
    value={value}
    checked={checked}
    oninput={onChange}
    disabled={disabled}
  >
  <label for={id}><slot/></label>
</div>

<style>
  .c-check {
    display: inline-block;
    padding: var(--space-xs);
    border-radius: var(--round-s);

    &:focus-within {
      outline: none;
      box-shadow: var(--shadow-focus);
    }

    input[type="checkbox"] {
      border-radius: 0;
      -webkit-appearance: none;
        -moz-appearance: none;
              appearance: none;

      position: relative;
      width: 1.25em;
      height: 1.25em;
      border: 2px solid var(--color-border-default);
      border-radius: var(--round-s);
      vertical-align: -5px;
    }

    input[type="checkbox"]:checked {
      background: var(--color-background-primary-emphasis);
      border: 2px solid var(--color-background-primary-emphasis);

      &:before {
        position: absolute;
        top: 1px;
        left: 5px;
        transform: rotate(45deg);
        width: 0.4em;
        height: 0.7em;
        border-right: 2px solid var(--color-foreground-on-fill);
        border-bottom: 2px solid var(--color-foreground-on-fill);
        content: '';
      }
    }

    label {
      padding-left: 1em;
    }

    &.error {
      input[type="checkbox"] {
        border: 2px solid var(--color-border-alert);
      }

      input[type="checkbox"]:checked {
        background: var(--color-background-primary-emphasis);
        border: 2px solid var(--color-background-primary-emphasis);

        & + label {
          color: var(--color-foreground-primary);
        }
      }
      
      label {
        color: var(--color-foreground-alert);
      }
    }

    &.disabled {
      input[type="checkbox"] {
        border: 2px solid var(--color-border-disabled);
        pointer-events: none;
      }
      
      label {
        color: var(--color-foreground-disabled);
      }
    }
  }
</style>