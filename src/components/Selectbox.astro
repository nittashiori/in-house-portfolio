---
interface Props {
  id: string;
  name: string;
  dataOnchange?: string;
  error?: boolean;
  disabled?: boolean;
  full?: boolean;
  width?: string;
}

const {
  id,
  name,
  dataOnchange = '',
  error = false,
  disabled = false,
  full = false,
  width = ''
} = Astro.props
---
<div
  class=`c-selectbox ${ disabled ? 'disabled' : '' } ${ error ? 'error' : '' }`
  style={`${full ? 'max-width: 100%;' : width ? `max-width: ${width};` : ''}`}
>
  <select
    id={id}
    name={name}
    disabled={disabled}
    data-onchange={dataOnchange}
  >
    <slot />
  </select>
</div>

<style>
  .c-selectbox {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;

    width: 100%;
    max-width: 200px;
    position: relative;
    z-index: 0;

    &::before {
      content: "";
      position: absolute;
      top: 0;
      right: 0;
      width: 2em;
      height: 100%;
      background-image: var(--icon-arrow-down-s);
      background-repeat: no-repeat;
      background-position: right 0.6em center;
      position: absolute;
      z-index: 1;
    }

    &:focus {
      outline: none;
      box-shadow: var(--shadow-focus);
    }

    > select {
      width: 100%;
      padding: var(--space-1-5) var(--space-4) var(--space-1-5) var(--space-2);
      background: var(--color-background-default);
      border: 1px solid var(--color-border-default);
      border-radius: var(--round-s);
    }

    &.error {
      > select {
        border: 1px solid var(--color-border-alert);
      }
    }

    &.disabled {
      background-color: var(--color-background-disabled);

      &::before {
        background-image: var(--icon-arrow-down-s-disabled);
        color: var(--color-foreground-disabled);
      }

      > select {
        cursor: not-allowed;
      }
    }
  }
</style>