---
interface Props {
  checked?: boolean;
  disabled?: boolean;
  dataOnchange?: string;
}

const {
  checked = false,
  disabled = false,
  dataOnchange = '',
} = Astro.props
---
<input
  class="c-switch"
  type="checkbox"
  id="toggleSwitch"
  role="switch"
  aria-label="テーマ切り替えスイッチ"
  aria-checked="false"
  {...(checked ? { checked: true } : {})}
  disabled={disabled}
  {...(dataOnchange ? {'data-onchange': dataOnchange} : {})}
>

<style>
  .c-switch {
    -webkit-appearance: none;
        -moz-appearance: none;
              appearance: none;

    display: inline-block;
    width: 48px;
    height: 24px;
    outline: none;
    vertical-align: top;
    margin: 0;
    cursor: pointer;
    background: var(--color-background-inset);
    border-radius: var(--round-full);
    transition: .4s;
    position: relative;
    z-index: 0;

    &::after {
      display: block;
      content: "";
      height: 16px;
      width: 16px;
      position: absolute;
      left: 4px;
      bottom: 4px;
      background: var(--color-background-default);
      border-radius: var(--round-full);
      transform: translateX(24px);
      transition: .4s;
    }

    @media (hover: hover) {
      &:hover {
        background: var(--color-background-inset);
      }
    }

    &:active {
      background: var(--color-background-inset);
    }

    &:checked {
      background: var(--color-background-emphasis);

      &::after {
        transform: translateX(0);
      }

      @media (hover: hover) {
        &:hover {
          background: var(--color-background-emphasis);
        }
      }

      &:active {
        background: var(--color-background-emphasis);
      }
    }
  }
</style>