---
import Layout from '../layouts/Layout.astro';
import Loading from '../components/Loading.astro';
import MV from '../components/MV.astro';
import SectionProfile from '../components/SectionProfile.astro';
import SectionSkill from '../components/SectionSkill.astro';
import SectionConsult from '../components/SectionConsult.astro';
import SectionWorks from '../components/SectionWorks.astro';
---

<Layout title="Top">
	<main class="main">
    <Loading />
		<MV />
		<SectionProfile />
		<SectionSkill />
		<SectionConsult />
		<SectionWorks />
	</main>
</Layout>

<script>
  // ローディング中のスクロール禁止
  function noscroll(e: any){
    e.preventDefault();
  }

  // 初回確認
  // localStorage.clear();
  const htmlElement = document.getElementsByTagName('html')
  const bodyElement = document.getElementsByTagName('body')
  setTimeout(() => {
    bodyElement[0].style.opacity = "1";
  }, 1);

  document.addEventListener('DOMContentLoaded', function() {
    const loadingElement = document.querySelector('.c-loading');
    const visited = localStorage.getItem('visited');
    if (!visited) {
      // 初回訪問時の処理
      htmlElement[0].classList.add("is-loading");
      document.addEventListener('touchmove', noscroll, { passive: false });
      document.addEventListener('wheel', noscroll, { passive: false });
      localStorage.setItem('visited', String(true));
      setTimeout(() => {
        htmlElement[0].classList.remove("is-loading");
        loadingElement?.classList.add('is-hidden');
        document.removeEventListener('touchmove', noscroll);
        document.removeEventListener('wheel', noscroll);
      }, 4000);
    } else {
      // 既に訪問したことがある場合
      loadingElement?.classList.add('is-hidden');
      document.removeEventListener('touchmove', noscroll);
      document.removeEventListener('wheel', noscroll);
    }
  });
  
	import { gsap } from 'gsap';
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  gsap.registerPlugin(ScrollTrigger);

  const MV = document.querySelector('.c-mv');
  const sectionWorks = document.querySelector('.c-section-works');

	gsap.to(MV, {
    opacity: 0.2,
    ease: "power1.out",
    scrollTrigger: {
      trigger: MV,
      start: "center 20%",
      end: "80% top",
      scrub: true,
      markers: false,
    }
  });

	ScrollTrigger.create({
    trigger: sectionWorks,
    start: "top top",  // トリガー要素の上部がビューポートの上部に来た時
		end: "+=100%",
    onEnter: () => gsap.to(MV, { opacity: 1, duration: 0.5 }), // 透明度を1に戻す
		onEnterBack: () => gsap.to(MV, { opacity: 0.2, duration: 0.5 }),
    markers: false,
  });
</script>

<style>
  html {
    body {
      opacity: 0;
    }

    .c-header {
      transition: .6s;
    }

    div.c-mv {
      z-index: -1;
    }
  }
  html.is-loading {
    .c-header {
      transform: translateY(-100%);
      -webkit-transfrom: translateY(-100%);
    }

    div.c-mv {
      z-index: 2;
    }
  }
	.main {
		padding-top: 100svh;
	}
  :global(.c-section-profile) {
		padding-bottom: 40svh !important;
  }
</style>